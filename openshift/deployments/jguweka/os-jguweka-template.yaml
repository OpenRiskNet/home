---
# oc process -f bridgedb.yaml | oc create -f -
# oc delete all --selector template=bridgedb

kind: Template
apiVersion: v1
metadata:
  name: jguweka
  annotations:
    description: JGU WEKA REST service
    tags: weka,algorithm
  labels:
    template: jguweka
    app: jguweka

parameters:

- name: IMAGE_TAG
  value: OAS3
  
- name: MONGODB_TAG
  value: latest 

- name: ROUTES_BASENAME
  value: prod.openrisknet.org

objects:

# docker image definitions
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: mongodb
  spec:
    dockerImageRepository: docker.io/gebele/mongodb
  status:
    dockerImageRepository: docker.io/gebele/mongodb
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: jguweka
  spec:
    dockerImageRepository: docker.io/jguweka/jguweka
  status:
    dockerImageRepository: docker.io/jguweka/jguweka
# deployments
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: mongodb
  spec:
    strategy:
      type: Recreate
      resources: {}
    triggers:
    - type: ConfigChange
    replicas: 1
    selector:
      name: mongodb
    template:
      metadata:
        labels:
          name: mongodb
      spec:
        containers:
        - name: mongodb
          image: docker.io/gebele/mongodb:${MONGODB_TAG}
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          securityContext:
            capabilities: {}
            privileged: false
        restartPolicy: Always
        dnsPolicy: ClusterFirst
  status: {}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: jguweka
  spec:
    strategy:
      type: Recreate
      resources: {}
    triggers:
    - type: ConfigChange
    replicas: 1
    selector:
      name: jguweka
    template:
      metadata:
        labels:
          name: jguweka
      spec:
        containers:
        - name: jguweka
          image: docker.io/rautenberg/jguweka:${IMAGE_TAG}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          securityContext:
            capabilities: {}
            privileged: false
        restartPolicy: Always
        dnsPolicy: ClusterFirst
  status: {}
- kind: Service
  apiVersion: v1
  metadata:
    name: mongodb
  spec:
    ports:
    - name: mongodb
      protocol: TCP
      port: 27017
      targetPort: 27017
      nodePort: 0
    selector:
      name: mongodb
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- kind: Service
  apiVersion: v1
  metadata:
    name: jguweka
  spec:
    ports:
    - name: jguweka
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 0
    selector:
      name: jguweka
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
# route to app
- kind: Route
  apiVersion: v1
  metadata:
    name: jguweka
    annotations:
      kubernetes.io/tls-acme: 'true'
  spec:
    host: jguweka.${ROUTES_BASENAME}
    to:
      kind: Service
      name: jguweka
    tls:
      termination: edge
  status: {}
labels:
  template: jguweka
