---

# oc process -f bridgedb.yaml | oc create -f -
# oc delete all --selector template=bridgedb
#
# Alternatively, deploy into the Template Broker and install from there.
# To deploy to the built-in 'openshift' namespace
# (once logged in to the appropriate OpenShift server): -
#
# oc create -t bridgedb.yaml -n openshift
#
# From there you should be able to use *Add to Project* (from any project)
# and navigate to the BridgeDB application using
#Â *Select from Project -> openshift*.

kind: Template
apiVersion: v1
metadata:
  name: bridgedb
  annotations:
    openshift.io/display-name: BridgeDB
    openshift.io/provider-display-name: Marvin Martens
    openshift.io/documentation-url: https://github.com/OpenRiskNet/home.git
    openshift.io/support-url: https://github.com/OpenRiskNet/home/issues
    iconClass: icon-openjdk
    description: >
      BridgeDb is a service to allow mapping gene and protein identifiers
    tags: bridge
labels:
  template: bridgedb
  app: bridgedb

# -----------------------------------------------------------------------------
# Parameters
# -----------------------------------------------------------------------------

parameters:

- name: IMAGE_TAG
  description: >-
    The BridgeDB container image tag
  value: orn-v2

- name: ROUTES_BASENAME
  description: >-
    The base name of the service endpoint.
    This is typically the PROD or DEV URL basename.
  value: prod.openrisknet.org

- name: BRIDGEDB_PORT
  description: >-
    The HTTP port for the BridgeDB service
  value: "8183"

- name: SWAGGER_PORT
  description: >-
    The HTTP port for the BridgeDB swagger service
  value: "8080"

# -----------------------------------------------------------------------------
# Objects
# -----------------------------------------------------------------------------

objects: 

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: bridgedb
  spec:
    replicas: 1
    selector:
      name: bridgedb
    template:
      metadata:
        labels:
          name: bridgedb
      spec:
        containers:
        - image: bigcatum/bridgedb:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          name: bridgedb
          ports:
          - containerPort: 8080
          - containerPort: 8183
          readinessProbe:
            failureTreshold: 4
            httpGet:
              path: /swagger/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            failureTreshold: 4
            httpGet:
              path: /swagger/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1000m
              memory: 2000Mi
            limits:
              cpu: 1500m
              memory: 4000Mi

- kind: Service
  apiVersion: v1
  metadata:
    name: bridgedb-app
  spec:
    ports:
    - name: bridgedb-app
      port: ${BRIDGEDB_PORT}
      targetPort: 8183
    selector:
      name: bridgedb

- kind: Service
  apiVersion: v1
  metadata:
    name: bridgedb-swagger
  spec:
    ports:
    - name: bridgedb-swagger
      port: ${SWAGGER_PORT}
      targetPort: 8080
    selector:
      name: bridgedb

- kind: Route
  apiVersion: v1
  metadata:
    name: bridgedb-app
    annotations:
      # Note: Set to false to avoid exhausting certificate generation request quota.
      # Change this to true when you are ready for secure the route with TLS.
      kubernetes.io/tls-acme: 'false'
  spec:
    host: bridgedb.${ROUTES_BASENAME}
    to:
      kind: Service
      name: bridgedb-app

- kind: Route
  apiVersion: v1
  metadata:
    name: bridgedb-swagger
    annotations:
      # Note: Set to false to avoid exhausting certificate generation request quota.
      # Change this to true when you are ready for secure the route with TLS.
      kubernetes.io/tls-acme: 'false'
  spec:
    host: bridgedb.${ROUTES_BASENAME}
    path: /swagger/
    to:
      kind: Service
      name: bridgedb-swagger
